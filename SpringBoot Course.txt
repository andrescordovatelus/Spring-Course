----------[Spring Boot Course 2023]----------

With Spring Framework, you can build a variety of applications using Java, Spring and Spring Boot.
	-Web
	-REST API
	-Full Stack
	-Microservices.

In order to initialize a Spring Project, you must go at this link: https://start.spring.io/

---------------------------------------------------------------------------
Why is Coupling Important?
	--> Coupling: How much work is involved in changing something?
		*Coupling is important everywhere:

	--> Coupling is even more important in building great software.
		-*Only thing constant in technology is change
			-Business requirements change.
			-Frameworks change.
			-Code changes.

---------------------------------------------------------------------------

Any Java Object is a Pojo
---------------------------------------------------------------------------

Java Beans:
	1. Have public default constructors.
	2. Allow access to their properties using getter and setter methods.
	3. Implement java.io.Serializable.

POJO: Plain Old Java Object
	1. No contrainsts
	2. Any Java Objects is a POJO!

Spring Bean: Any Java Object tht is managed by Spring.
	Spring uses IOC Contaniner (Bean Factory or Application Context) to 
	manage these objects.

---------------------------------------------------------------------------

@Primary: A bean should be given preference when multiple candidates are qualified
@Qualifier: A specific bean should be auto-wired (name of the bean can be used as qualifier)
@Component: An instance of class will be managed by Spring framework
@Dependency: 
@ComponentScan: it scans packagess

Dependency Injection: identify beans, their de[endencies and wire them together

@AutoWired: Process of wiring in dependencies for a Spring Bean

@Lazy annotation
	-Can be used almost everywhere @Component and @Bean are used.
	-Lazy-resolution proxy will be injected instead of actual dependency.

	IMPORTANT:
	However, you can configure beans to be lazily initialized using Lazy annotation but:
		=> NOT recommended (AND) not frequently used..

---------------------------------------------------------------------------

Spring Beans are defined to be used in a specific scope:
	=>Singleton> One object instance per Spring IoC container.
	=>Prototype> Possibly many object instances per Spring IoC container.

Scopes applicable ONLY or web-aware Spring ApplicationContext

---------------------------------------------------------------------------

JAVA SINGLETON (GOF) vs SPRING SINGLETON
	+Spring Singleton: One object instance per Spring IoC container.
	+Java Singleton (GOF): One object instance per JVM

---------------------------------------------------------------------------

With the time, the were separated out:
	-J2EE - Java 2 Platform Enterprise Edition.
	-Java EE - Java Platform Enterprise Edition (Rebranding)
	-Jakarta EE (Oracle gave Java EE rights to the Eclipse Foundation)
		=>Important Specifications:
			-Jakarta Server Pages (JSP)
			-Jakarta Standard Tag Library (JSTL)
			-Jakarta Enterprise Beans (EJB)
			-Jakarta RESTful Web Services (JAX-RS)
			-Jakarta Bean Validation
			-Jakarta Contexts and Dependency Injection (CDI)
			-Jakarta Persistence (JPA)

---------------------------------------------------------------------------

@Service - Indicates that an annotated class has business logic.
@Controller - Indicates that and annotated class is a "Controller"
					used to define controllers in  your we applications.
@Repository - Indicates that an annotated class is used to retrieve and/or manipulate data in a database

---------------------------------------------------------------------------

Dependency Injection: Identify beans, their dependencies and wire them together

Constr.Injection: Dependencies are set by creating the BEan using its Constructor

Setter Injection: Dependencies are set by calling setter methods on your beans.

Field Injection: No setter or contructor. Dependency is injected using reflection.

IOC COntainer: Spring IOC COntext that manages Spring beans & their lifecycle.

Bean Factory: Basic Spring IOC Container.

Application Context: Advanced Spring IOC Container with enterprise-specific features.

Auto-wiring: Process of wiring dependencies for a Spring Bean


---------------------------------------------------------------------------
Spring Framework: Dependency Injection

Spring MVC: Simplify building web apps and REST API

Spring Boot: Build Production-Ready apps QUICKLY

---------------------------------------------------------------------------
				LEARNING JPA AND HIBERNATE

In order to initialize a new project, we must to put the following dependencies:
	=>Spring Web
	=>Spring Data JDBC
	=>Spring Data JPA
	=>H2 DATABASE

And also, we have to set up tje application.properties:
	spring.h2.console.enabled=true
	spring.datasource.url=jdbc:h2:mem:testdb

Entity Manager is to manage entities around the bd.

	merge: to insert.
	find: to find.
	delete: to remove


JPA defines the specification. It is an API.
Hibernate is one of the popular implementations of JPA.
Using Hibernate directly would result in a lock in to Hubernate.

---------------------------------------------------------------------------
> KNOWING WHAT TO LOG is an essential skill to be a great programmer.